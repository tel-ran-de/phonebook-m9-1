on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [closed]

name: Deploy to Amazon ECS

jobs:

  build_deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      # Building steps
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Copy application.properties
        run: mv phonebook-api/src/main/resources/application.properties_ phonebook-api/src/main/resources/application.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build UI
        run: ./gradlew buildUi

      - name: Build API
        run: ./gradlew bootJarDev

      # Deploying steps
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: phonebook-1
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: phonebook-1-server
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: phonebook-1
          cluster: phonebook-cluster
          wait-for-service-stability: true
